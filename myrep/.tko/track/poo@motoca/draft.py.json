{
    "patches": [
        {
            "label": "2025-10-20_22-19-21",
            "content": "@@ -1,257 +0,0 @@\n-class pessoa:%0A    def __init__(self) -%3E None:%0A        self._name :str = name%0A        self._age :int = age%0A%0A%0A%0A%0A%0A%0A%0Adef main():%0A     moto = motoca()%0A     while true:%0A         try:%0A             line = input().strip()%0A         except EOFERROR:%0A             break\n",
            "lines": "0"
        },
        {
            "label": "2025-10-21_22-50-09",
            "content": "@@ -105,1020 +105,153 @@\n e%0A%0A%0A\n-class motoca:%0A    def __init__(self, potencia :int = 1) -%3E None:%0A        self.potencia : int = potencia%0A        self.time : int = 0%0A        self.pessoa = None%0A%0A    def toString(self) -%3E str:%0A        if self.pessoa is None:%0A            person_str = %22empty%22%0A        else:%0A            person_str = f%22%7Bself.pessoa.get.Name()%7D:%7Bself.pessoa.get.Age()%7D%22%0A            return f%22power: %7Bself.potencia%7D, time :%7Bself.time%7D, person :(%7Bperson_str%7D)%22%0A    def __str__(self)-%3E str:%0A        return self.toString()   %0A%0A%0A%0A%0A%0Adef main():%0A     moto = motoca()%0A     while true:%0A         try:%0A             line = input().strip()%0A         except EOFERROR:%0A             break%0A         if line == %22%22:%0A             continue%0A         if not line.startswith(%22$%22):%0A             continue%0A         parts =line.split()%0A         cmd = parts%7B0%7D%0A         if cmd == %22$end%22:%0A             break%0A         elif cmd == %22$show%22:%0A             print(moto.toString())%0A         else:%0A             print(%22fail :unknown command%22)%0Aif __name__ == %22__ main__%22:%0A    main()\n+%0A%0A%0A%0A%0Adef main():%0A     moto = motoca()%0A     while true:%0A         try:%0A             line = input().strip()%0A         except EOFERROR:%0A             break\n",
            "lines": "18"
        },
        {
            "label": "2025-10-21_23-21-16",
            "content": "@@ -1,111 +1,89 @@\n-class pessoa:%0A    def __init__(self) -%3E None:%0A        self._name :str = %22name%22%0A        self._age :int = 0%0A%0A\n+@@ -69,14 +69,12 @@%0A r = %0A-%2522%0A name%0A-%2522%0A %250A   %0A@@ -99,266 +99,13 @@%0A t = %0A-0%250A%250A\n     \n@@ -93,39 +93,43 @@\n  getName(self) -\n-%3E\n+%253E\n  str:\n-%0A\n+%250A\n         return s\n@@ -137,22 +137,26 @@\n lf._name\n-%0A\n+%250A\n     \n-%0A\n+%250A\n     def \n@@ -173,15 +173,19 @@\n f) -\n-%3E\n+%253E\n  int:\n-%0A\n+%250A\n     \n@@ -204,18 +204,22 @@\n elf._age\n-%0A%0A\n+%250A%250A\n     def \n@@ -226,39 +226,43 @@\n toString(self) -\n-%3E\n+%253E\n  str:\n-%0A\n+%250A\n         return f\n@@ -261,18 +261,22 @@\n return f\n-%22%7B\n+%2522%257B\n self._na\n@@ -277,19 +277,23 @@\n lf._name\n-%7D:%7B\n+%257D:%257B\n self._ag\n@@ -297,16 +297,24 @@\n _age\n-%7D%22%0A\n+%257D%2522%250A\n     \n-%0A\n+%250A\n     \n@@ -336,1053 +336,65 @@\n f) -\n-%3E\n+%253E\n  str:\n-%0A        return self.toString()%0Aclass motoca:%0A    def __init__(self, potencia :int = 1) -%3E None:%0A        self.potencia : int = potencia%0A        self.time : int = 0%0A        self.pessoa = None%0A%0A    def toString(self) -%3E str:%0A        if self.pessoa is None:%0A            person_str = %22empty%22%0A        else:%0A            person_str = f%22%7Bself.pessoa.get.Name()%7D:%7Bself.pessoa.get.Age()%7D%22%0A        return f%22power: %7Bself.potencia%7D, time :%7Bself.time%7D, person :(%7Bperson_str%7D)%22%0A    def __str__(self)-%3E str:%0A        return self.toString()   %0A%0A%0A%0A%0A%0Adef main():%0A     moto = motoca()%0A     while True:%0A         try:%0A             line = input().strip()%0A         except EOFError:%0A             break%0A         if line == %22%22:%0A             continue%0A         if not line.startswith(%22$%22):%0A             continue%0A         parts =line.split()%0A         cmd = parts%5B0%5D%0A%0A         if cmd == %22$end%22:%0A            break%0A         elif cmd == %22$show%22:%0A            print(moto.toString())%0A         else:%0A            print(%22fail: unknown command%22)%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()\n+%250A        return self.toString()%0A+age%250A%250A%0A %250Acla%0A\n",
            "lines": "11"
        },
        {
            "label": "2025-10-21_23-46-23",
            "content": "@@ -65,20 +65,22 @@\n  :str = \n+%22\n name\n+%22\n %0A       \n@@ -97,19 +97,17 @@\n  :int = \n-age\n+0\n %0A%0A    de\n@@ -518,210 +518,8 @@\n None\n-%0A    def inserir(self, pessoa: pessoa) -%3E bool :%0A        if self.pessoa is not None :%0A            print(%22fail: busy motorcycle%22)%0A            return False%0A        self.pessoa = pessoa%0A        return True\n %0A%0A  \n",
            "lines": "59"
        },
        {
            "label": "2025-10-21_23-54-51",
            "content": "@@ -721,179 +721,8 @@\n rue%0A\n-    def remover(self) -%3E pessoa %7C None:%0A        if self.pessoa is None:%0A            print(%22fail: empty motocycle%22)%0A            return None%0A        p = self.pessoa%0A        \n %0A   \n",
            "lines": "65"
        },
        {
            "label": "2025-10-21_23-59-19",
            "content": "@@ -356,21 +356,16 @@\n tring()%0A\n-    %0A\n class mo\n@@ -515,17 +515,16 @@\n  = None%0A\n-%0A\n     def \n@@ -717,21 +717,16 @@\n rn True%0A\n-    %0A\n     def \n@@ -880,24 +880,24 @@\n .pessoa%0A\n+\n         \n self.pes\n@@ -892,330 +892,8 @@\n     \n-self.pessoa = None%0A        print(p.toString())%0A        return p%0A    %0A    def buyTime(self, minuto: int) -%3E None:%0A        self.time += minutos%0A%0A    def drive(self, minutos :int) -%3E None:%0A              self.time %3C=0:%0A              print(%22fail: buy time firt%22)%0A              return%0A%0A    def drive(self, minutos :int) -%3E None:\n %0A   \n",
            "lines": "70"
        },
        {
            "label": "2025-10-22_00-14-44",
            "content": "@@ -32,87 +32,18 @@\n self\n-, name: str, age: int) -%3E None:%0A        # atributos privados conforme enunciado\n+) -%3E None:\n %0A   \n@@ -57,15 +57,14 @@\n lf._\n-_\n name\n-:\n  \n+:\n str \n@@ -88,14 +88,13 @@\n lf._\n-_\n age\n-:\n  \n+:\n int \n@@ -155,14 +155,17 @@\n lf._\n-_\n name%0A\n+    \n %0A   \n@@ -211,17 +211,16 @@\n n self._\n-_\n age%0A%0A   \n@@ -271,17 +271,16 @@\n %22%7Bself._\n-_\n name%7D:%7Bs\n@@ -288,15 +288,18 @@\n lf._\n-_\n age%7D%22%0A\n+    \n %0A   \n@@ -360,17 +360,20 @@\n g()%0A\n-%0A\n+    \n %0Aclass \n-M\n+m\n otoc\n@@ -402,26 +402,26 @@\n lf, potencia\n-:\n  \n+:\n int = 1) -%3E \n@@ -447,16 +447,17 @@\n potencia\n+ \n : int = \n@@ -482,16 +482,17 @@\n elf.time\n+ \n : int = \n@@ -516,23 +516,8 @@\n ssoa\n-: Pessoa %7C None\n  = N\n@@ -551,17 +551,17 @@\n pessoa: \n-P\n+p\n essoa) -\n@@ -566,16 +566,17 @@\n  -%3E bool\n+ \n :%0A      \n@@ -599,24 +599,25 @@\n  is not None\n+ \n :%0A          \n@@ -723,16 +723,20 @@\n rn True%0A\n+    \n %0A    def\n@@ -753,17 +753,17 @@\n elf) -%3E \n-P\n+p\n essoa %7C \n@@ -827,33 +827,32 @@\n fail: empty moto\n-r\n cycle%22)%0A        \n@@ -963,16 +963,20 @@\n eturn p%0A\n+    \n %0A    def\n@@ -988,33 +988,32 @@\n ime(self, minuto\n-s\n : int) -%3E None:%0A\n@@ -1016,55 +1016,8 @@\n ne:%0A\n-        # adiciona minutos ao tempo dispon%C3%ADvel%0A\n     \n@@ -1069,18 +1069,18 @@\n  minutos\n-:\n  \n+:\n int) -%3E \n@@ -1095,35 +1095,16 @@\n     \n-  # verifica tempo%0A\n         \n if s\n@@ -1095,27 +1095,24 @@\n             \n-if \n self.time %3C=\n@@ -1107,25 +1107,24 @@\n self.time %3C=\n- \n 0:%0A         \n@@ -1118,32 +1118,34 @@\n =0:%0A            \n+ \n+ \n print(%22fail: buy\n@@ -1153,17 +1153,16 @@\n time fir\n-s\n t%22)%0A    \n@@ -1173,645 +1173,60 @@\n     \n-return%0A%0A        # verifica se tem pessoa%0A        if self.pessoa is None:%0A            print(%22fail: empty motorcycle%22)%0A            return%0A%0A        # verifica idade (maior que 10 %C3%A9 %22too old%22)%0A        if self.pessoa.getAge() %3E 10:%0A            print(%22fail: too old to drive%22)%0A            return%0A%0A        new_time = self.time - minutos%0A        if new_time %3C= 0:%0A            # imprime com o tempo que havia antes da tentativa%0A            print(f%22fail: time finished after %7Bself.time%7D minutes%22)%0A            self.time = 0%0A        else:%0A            self.time = new_time%0A%0A    def honk(self) -%3E str:%0A        return %22P%22 + (%22e%22 * self.potencia) + %22m%22%0A\n+  return%0A%0A    def drive(self, minutos :int) -%3E None:\n %0A   \n@@ -1375,16 +1375,17 @@\n ssoa.get\n+.\n Name()%7D:\n@@ -1404,16 +1404,17 @@\n .get\n+.\n Age()%7D%22%0A\n     \n@@ -1413,60 +1413,8 @@\n )%7D%22%0A\n-        # formato exato pedido (sem espa%C3%A7os extras)%0A\n     \n@@ -1432,16 +1432,17 @@\n f%22power:\n+ \n %7Bself.po\n@@ -1454,16 +1454,17 @@\n a%7D, time\n+ \n :%7Bself.t\n@@ -1475,16 +1475,17 @@\n , person\n+ \n :(%7Bperso\n@@ -1493,17 +1493,16 @@\n _str%7D)%22%0A\n-%0A\n     def \n@@ -1506,33 +1506,32 @@\n ef __str__(self)\n- \n -%3E str:%0A        \n@@ -1556,512 +1556,11 @@\n ng()\n-%0A%0A%0Adef main():%0A    moto = Motoca()%0A%0A    while True:%0A        try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A%0A        if line == %22%22:%0A            continue%0A        if not line.startswith(%22$%22):%0A            continue%0A%0A        parts = line.split()%0A        cmd = parts%5B0%5D%0A%0A        if cmd == %22$end%22:%0A            break%0A        elif cmd == %22$show%22:%0A            print(moto.toString())%0A        else:%0A            print(%22fail: unknown command%22)%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()\n+   \n %0A%0A%0A%0A\n",
            "lines": "85"
        },
        {
            "label": "2025-10-22_00-26-04",
            "content": "@@ -52,32 +52,80 @@\n : int) -%3E None:%0A\n+        # atributos privados conforme enunciado%0A\n         self.__n\n@@ -572,25 +572,25 @@\n elf.pessoa: \n-p\n+P\n essoa %7C None\n@@ -602,138 +602,8 @@\n ne%0A%0A\n-    def init(self, potencia: int = 1) -%3E None:%0A        self.potencia = potencia%0A        self.time = 0%0A        self.pessoa = None%0A%0A\n     \n@@ -628,17 +628,17 @@\n pessoa: \n-p\n+P\n essoa) -\n@@ -824,22 +824,23 @@\n elf) -%3E \n-p\n+P\n essoa\n+ \n %7C None:%0A\n@@ -1073,32 +1073,79 @@\n : int) -%3E None:%0A\n+        # adiciona minutos ao tempo dispon%C3%ADvel%0A\n         self.tim\n@@ -1193,32 +1193,57 @@\n : int) -%3E None:%0A\n+        # verifica tempo%0A\n         if self.\n@@ -1307,32 +1307,65 @@\n         return%0A%0A\n+        # verifica se tem pessoa%0A\n         if self.\n@@ -1436,32 +1436,84 @@\n         return%0A%0A\n+        # verifica idade (maior que 10 %C3%A9 %22too old%22)%0A\n         if self.\n@@ -1655,32 +1655,95 @@\n  new_time %3C= 0:%0A\n+            # imprime com o tempo que havia antes da tentativa%0A\n             prin\n@@ -2130,16 +2130,68 @@\n Age()%7D%22%0A\n+        # formato exato pedido (sem espa%C3%A7os extras)%0A\n         \n@@ -2660,33 +2660,32 @@\n           break%0A\n-%0A\n         elif cmd\n@@ -2728,25 +2728,24 @@\n toString())%0A\n-%0A\n         elif\n@@ -2746,78 +2746,10 @@\n   el\n-if cmd == %22$init%22:%0A            if len(parts) %3E= 2:%0A                try\n+se\n :%0A  \n@@ -2762,336 +2762,134 @@\n     \n- \n-       p = int(parts%5B1%5D)%0A                except ValueError:%0A                    p = 1%0A                moto.init(p)%0A            else:%0A                moto.init(1)%0A%0A        elif cmd == %22$enter%22:%0A            if len(parts) %3C 3:%0A                print(%22fail: invalid arguments%22)%0A                continue%0A            nome = parts%5B1%5D%0A \n+print(%22fail: unknown command%22)%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()%0A%0A%0A%0A%0A%0Adef main():%0A     moto = motoca()%0A     while True:%0A\n     \n@@ -2885,34 +2885,32 @@\n  True:%0A         \n-  \n try:%0A           \n@@ -2915,31 +2915,29 @@\n     \n-   idade = int(parts%5B2%5D\n+line = input().strip(\n )%0A  \n@@ -2939,39 +2939,34 @@\n ()%0A         \n- \n-  \n except \n-Value\n+EOF\n Error:%0A     \n@@ -2977,221 +2977,35 @@\n     \n-   print(%22fail: invalid age%22)%0A                continue%0A            pessoa = Pessoa(nome, idade)%0A            moto.inserir(pessoa)%0A%0A        elif cmd == %22$leave%22:%0A            moto.remover()%0A%0A        elif cmd\n+break%0A         if line\n  == %22\n-$buy\n %22:%0A \n@@ -3019,232 +3019,55 @@\n     \n-if len(parts) %3C 2:%0A                print(%22fail: invalid arguments%22)%0A                continue%0A            try:%0A                minutos = int(parts%5B1%5D)%0A            except ValueError:%0A                print(%22fail: invalid time\n+ continue%0A         if not line.startswith(%22$\n %22)\n+:\n %0A   \n@@ -3068,35 +3068,32 @@\n ):%0A             \n-   \n continue%0A       \n@@ -3098,359 +3098,99 @@\n     \n-   moto.buyTime(minutos)%0A%0A        elif cmd == %22$drive%22:%0A            if len(parts) %3C 2:%0A                print(%22fail: invalid arguments%22)%0A                continue%0A            try:%0A                minutos = int(parts%5B1%5D)%0A            except ValueError:%0A                print(%22fail: invalid time%22)%0A                continue%0A            moto.drive(minutos)%0A%0A\n+parts =line.split()%0A         cmd = parts%5B0%5D%0A%0A         if cmd == %22$end%22:%0A            break%0A \n     \n@@ -3207,20 +3207,20 @@\n md == %22$\n+s\n ho\n-nk\n+w\n %22:%0A     \n@@ -3241,17 +3241,21 @@\n oto.\n-honk\n+toString\n ())%0A\n-%0A\n+ \n     \n",
            "lines": "140"
        },
        {
            "label": "2025-10-24_17-31-56",
            "content": "@@ -1,15 +1,15 @@\n class \n-P\n+p\n essoa:%0A \n@@ -376,16 +376,17 @@\n ring()%0A%0A\n+%0A\n class Mo\n@@ -524,25 +524,25 @@\n elf.pessoa: \n-P\n+p\n essoa %7C None\n@@ -710,17 +710,17 @@\n pessoa: \n-P\n+p\n essoa) -\n@@ -910,15 +910,14 @@\n  -%3E \n-P\n+p\n essoa\n- \n %7C No\n@@ -2135,16 +2135,17 @@\n ring()%0A%0A\n+%0A\n def main\n@@ -3136,20 +3136,16 @@\n   pessoa\n-_obj\n  = Pesso\n@@ -3162,30 +3162,8 @@\n ade)\n-   # inst%C3%A2ncia correta\n %0A   \n@@ -3194,12 +3194,8 @@\n ssoa\n-_obj\n )%0A%0A \n@@ -4048,16 +4048,16 @@\n ain__%22:%0A\n+\n     main\n@@ -4058,9 +4058,8 @@\n   main()\n-%0A\n",
            "lines": "162"
        },
        {
            "label": "2025-10-24_17-38-39",
            "content": "@@ -375,16 +375,17 @@\n tring()%0A\n+%0A\n class Mo\n@@ -3163,16 +3163,36 @@\n idade)  \n+ # inst%C3%A2ncia correta\n %0A       \n",
            "lines": "160"
        },
        {
            "label": "2025-10-24_17-49-55",
            "content": "@@ -375,18 +375,16 @@\n tring()%0A\n-%0A%0A\n class Mo\n@@ -2134,17 +2134,16 @@\n ring()%0A%0A\n-%0A\n def main\n@@ -2323,164 +2323,65 @@\n nue%0A\n-%0A        # Suporte para entradas com ou sem o prefixo '$'%0A        if not line.startswith(%22$%22):%0A            line = %22$%22 + line  # transforma %22show%22 em %22$show%22\n+        if not line.startswith(%22$%22):%0A            continue\n %0A%0A  \n@@ -3160,16 +3160,18 @@\n , idade)\n+  \n %0A       \n",
            "lines": "159"
        },
        {
            "label": "2025-10-24_17-50-52",
            "content": "@@ -2337,51 +2337,54 @@\n   # \n-transforma comandos sem $ em comandos com $\n+Suporte para entradas com ou sem o prefixo '$'\n %0A   \n@@ -2450,72 +2450,40 @@\n line\n-%0A%0A        print(line)  # %3C%3C%3C imprime o comando antes da resposta\n+  # transforma %22show%22 em %22$show%22\n %0A%0A  \n@@ -4162,12 +4162,13 @@\n :%0A    main()\n+%0A\n",
            "lines": "164"
        },
        {
            "label": "2025-10-24_17-52-39",
            "content": "class Pessoa:\n    def __init__(self, name: str, age: int) -> None:\n        self.__name: str = name\n        self.__age: int = age\n\n    def getName(self) -> str:\n        return self.__name\n\n    def getAge(self) -> int:\n        return self.__age\n\n    def toString(self) -> str:\n        return f\"{self.__name}:{self.__age}\"\n\n    def __str__(self) -> str:\n        return self.toString()\n\n\nclass Motoca:\n    def __init__(self, potencia: int = 1) -> None:\n        self.potencia: int = potencia\n        self.time: int = 0\n        self.pessoa: Pessoa | None = None\n\n    def init(self, potencia: int = 1) -> None:\n        self.potencia = potencia\n        self.time = 0\n        self.pessoa = None\n\n    def inserir(self, pessoa: Pessoa) -> bool:\n        if self.pessoa is not None:\n            print(\"fail: busy motorcycle\")\n            return False\n        self.pessoa = pessoa\n        return True\n\n    def remover(self) -> Pessoa | None:\n        if self.pessoa is None:\n            print(\"fail: empty motorcycle\")\n            return None\n        p = self.pessoa\n        self.pessoa = None\n        print(p.toString())\n        return p\n\n    def buyTime(self, minutos: int) -> None:\n        self.time += minutos\n\n    def drive(self, minutos: int) -> None:\n        if self.time <= 0:\n            print(\"fail: buy time first\")\n            return\n\n        if self.pessoa is None:\n            print(\"fail: empty motorcycle\")\n            return\n\n        if self.pessoa.getAge() > 10:\n            print(\"fail: too old to drive\")\n            return\n\n        new_time = self.time - minutos\n        if new_time <= 0:\n            print(f\"fail: time finished after {self.time} minutes\")\n            self.time = 0\n        else:\n            self.time = new_time\n\n    def honk(self) -> str:\n        return \"P\" + (\"e\" * self.potencia) + \"m\"\n\n    def toString(self) -> str:\n        if self.pessoa is None:\n            person_str = \"empty\"\n        else:\n            person_str = f\"{self.pessoa.getName()}:{self.pessoa.getAge()}\"\n        return f\"power:{self.potencia}, time:{self.time}, person:({person_str})\"\n\n    def __str__(self) -> str:\n        return self.toString()\n\n\ndef main():\n    moto = Motoca()\n\n    while True:\n        try:\n            line = input().strip()\n        except EOFError:\n            break\n\n        if line == \"\":\n            continue\n\n        # transforma comandos sem $ em comandos com $\n        if not line.startswith(\"$\"):\n            line = \"$\" + line\n\n        print(line)  # <<< imprime o comando antes da resposta\n\n        parts = line.split()\n        cmd = parts[0]\n\n        if cmd == \"$end\":\n            break\n\n        elif cmd == \"$show\":\n            print(moto.toString())\n\n        elif cmd == \"$init\":\n            if len(parts) >= 2:\n                try:\n                    p = int(parts[1])\n                except ValueError:\n                    p = 1\n                moto.init(p)\n            else:\n                moto.init(1)\n\n        elif cmd == \"$enter\":\n            if len(parts) < 3:\n                print(\"fail: invalid arguments\")\n                continue\n            nome = parts[1]\n            try:\n                idade = int(parts[2])\n            except ValueError:\n                print(\"fail: invalid age\")\n                continue\n            pessoa_obj = Pessoa(nome, idade)\n            moto.inserir(pessoa_obj)\n\n        elif cmd == \"$leave\":\n            moto.remover()\n\n        elif cmd == \"$buy\":\n            if len(parts) < 2:\n                print(\"fail: invalid arguments\")\n                continue\n            try:\n                minutos = int(parts[1])\n            except ValueError:\n                print(\"fail: invalid time\")\n                continue\n            moto.buyTime(minutos)\n\n        elif cmd == \"$drive\":\n            if len(parts) < 2:\n                print(\"fail: invalid arguments\")\n                continue\n            try:\n                minutos = int(parts[1])\n            except ValueError:\n                print(\"fail: invalid time\")\n                continue\n            moto.drive(minutos)\n\n        elif cmd == \"$honk\":\n            print(moto.honk())\n\n        else:\n            print(\"fail: unknown command\")\n\n\nif __name__ == \"__main__\":\n    main()",
            "lines": "166"
        }
    ]
}