{
    "patches": [
        {
            "label": "2025-10-20_22-19-44",
            "content": "@@ -1,8 +1,27 @@\n+@@ -1,325 +0,0 @@%0A-\n class Pe\n@@ -25,17 +25,19 @@\n  Peesoa:\n-%0A\n+%250A\n     def \n@@ -75,17 +75,19 @@\n y :int):\n-%0A\n+%250A\n         \n@@ -105,25 +105,27 @@\n : str = name\n-%0A\n+%250A\n         self\n@@ -140,25 +140,27 @@\n  int = money\n-%0A\n+%250A\n     def getN\n@@ -174,15 +174,19 @@\n f) -\n-%3E\n+%253E\n  str:\n-%0A\n+%250A\n     \n@@ -206,17 +206,19 @@\n lf._name\n-%0A\n+%250A\n     def \n@@ -232,23 +232,27 @@\n y(self)-\n-%3E\n+%253E\n  int:\n-%0A\n+%250A\n         \n@@ -269,17 +269,19 @@\n f._money\n-%0A\n+%250A\n     def \n@@ -312,15 +312,19 @@\n nt)-\n-%3E\n+%253E\n  int:\n-%0A\n+%250A\n     \n@@ -346,17 +346,19 @@\n  = valor\n-%0A\n+%250A\n     def \n@@ -362,9 +362,12 @@\n ef pagar\n+%250A\n %0A\n",
            "lines": "2"
        },
        {
            "label": "2025-10-27_23-37-39",
            "content": "@@ -3,12 +3,14 @@\n ass \n-Lead\n+Peesoa\n :%0A  \n@@ -34,135 +34,64 @@\n lf, \n-thickness :float, hardness: str, size: int):%0A        self._thickness: float = thickness%0A        self._ hardness: str = hardness\n+name : str, money :int):%0A        self._name : str = name\n %0A   \n@@ -105,20 +105,21 @@\n lf._\n-size\n+money\n : int = \n size\n@@ -118,79 +118,13 @@\n t = \n-size%0A    def getThinckness(self) -%3E str:%0A        return self._thickness\n+money\n %0A   \n@@ -135,16 +135,12 @@\n  get\n-Hardness\n+Name\n (sel\n@@ -144,16 +144,17 @@\n self) -%3E\n+ \n str:%0A   \n@@ -167,32 +167,28 @@\n eturn self._\n-hardness\n+name\n %0A    def get\n@@ -191,19 +191,19 @@\n  get\n-Size\n+Money\n (self)\n- \n -%3E i\n@@ -227,20 +227,21 @@\n n self._\n-size\n+money\n %0A    def\n@@ -248,85 +248,32 @@\n  set\n-Size\n+Money\n (self, \n-size\n+valor\n  :\n+ \n int)\n-:%0A        self._size = size%0A    def usagePerSheet(self) \n -%3E i\n@@ -288,814 +288,38 @@\n     \n-if \n self._\n-self._hardness == %22HB%22:%0A            return 1%0A        if self._hardness == %222B%22:%0A            return 2%0A        if self._hardness == %224B%22:%0A            return 4%0A        if seslf._hardness%0A    %0A%0A%0A%0Adef main():%0A    pencil: Pencil %7C N\n+m\n one\n+y\n  = \n-None%0A    while True:%0A        line: str = input()%0A        print(%22$%22+line%22)%0A        args: list%5Bstr%5D = line.split()%0A         if args%5B0%5D == %22show%22:%0A            if pencil != None:%0A                print(pencil)%0A         else%0A            print(%22fail: lapiseira nao iniciada%22)%0A            elif args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D ==%22init%22:%0A            thickness = float(args%5B1%5D)%0A            pencil = Pencil9thickness)%0A        elif args%5B0%5D == %22insert%22:%0A        if Pencil is None:%0A            print(fail; lapiseira nao iniciada%22)%0A                  continue%0A\n+valor%0A    def pagar\n %0A\n",
            "lines": "11"
        },
        {
            "label": "2025-10-28_09-34-48",
            "content": "@@ -33,26 +33,26 @@\n f, thickness\n-:\n  \n+:\n float, hardn\n@@ -126,24 +126,25 @@\n       self._\n+ \n hardness: st\n@@ -179,33 +179,32 @@\n ize: int = size%0A\n-%0A\n     def getThick\n@@ -193,32 +193,33 @@\n e%0A    def getThi\n+n\n ckness(self) -%3E \n@@ -218,21 +218,19 @@\n elf) -%3E \n-float\n+str\n :%0A      \n@@ -250,25 +250,24 @@\n ._thickness%0A\n-%0A\n     def getH\n@@ -274,33 +274,32 @@\n ardness(self) -%3E\n- \n str:%0A        ret\n@@ -317,17 +317,16 @@\n ardness%0A\n-%0A\n     def \n@@ -369,25 +369,24 @@\n  self._size%0A\n-%0A\n     def setS\n@@ -395,26 +395,26 @@\n e(self, size\n-:\n  \n+:\n int):%0A      \n@@ -433,17 +433,16 @@\n  = size%0A\n-%0A\n     def \n@@ -476,24 +476,30 @@\n %0A        if \n+self._\n self._hardne\n@@ -531,34 +531,32 @@\n eturn 1%0A        \n-el\n if self._hardnes\n@@ -587,34 +587,32 @@\n eturn 2%0A        \n-el\n if self._hardnes\n@@ -655,945 +655,33 @@\n     \n-el\n if se\n-lf._hardness == %226B%22:%0A            return 6%0A        else:%0A            return 0%0A    def __str__(self) -%3E str:%0A        return f%22%5B%7Bself.__thickness%7D:%7Bself.__hardness%7D:%7Bself.__size%7D%5D%22%0Aclass Pencil:%0A    def __init__(self, thickness: float):%0A        self._tip: None = None%0A        self._thickness: float = thickness%0A    def getTip(self) -%3E Lead%7C None:%0A        return self._tip%0A    def getThickness(self)-%3E float:%0A        return self._thickness%0A    def hasGrafite(self) -%3E bool :%0A        if self._tip!= None:%0A            return True%0A        else:%0A            return False%0A    def insert(self,grafite: Lead) -%3E bool:%0A        if self.hasGrafite():%0A            print(%22fail: ja existe grafite%22)%0A            return False%0A        elif grafite.getThickness() !=self._thickness:%0A            print(%22fail: calibre inconpativel%22)%0A            return False%0A        self._tip = grafite%0A        return True%0A    def remove(self) -%3E Lead%7C None:%0A        if\n+slf._hardness%0A    %0A%0A\n %0A%0Ade\n",
            "lines": "46"
        },
        {
            "label": "2025-10-28_09-48-18",
            "content": "@@ -740,17 +740,16 @@\n eturn 0%0A\n-%0A\n     def \n@@ -791,24 +791,25 @@\n n f%22%5B%7Bself._\n+_\n thickness%7D:%7B\n@@ -810,24 +810,25 @@\n ess%7D:%7Bself._\n+_\n hardness%7D:%7Bs\n@@ -836,16 +836,17 @@\n lf._\n+_\n size%7D%5D%22%0A\n %0A%0Acl\n@@ -841,18 +841,16 @@\n size%7D%5D%22%0A\n-%0A%0A\n class Pe\n@@ -915,23 +915,16 @@\n lf._tip:\n- Lead %7C\n  None = \n@@ -963,33 +963,32 @@\n oat = thickness%0A\n-%0A\n     def getTip(s\n@@ -991,33 +991,32 @@\n ip(self) -%3E Lead\n- \n %7C None:%0A        \n@@ -1032,17 +1032,16 @@\n lf._tip%0A\n-%0A\n     def \n@@ -1050,33 +1050,32 @@\n tThickness(self)\n- \n -%3E float:%0A      \n@@ -1091,33 +1091,32 @@\n self._thickness%0A\n-%0A\n     def hasGrafi\n@@ -1123,32 +1123,33 @@\n te(self) -%3E bool\n+ \n :%0A        return\n@@ -1134,38 +1134,34 @@\n  bool :%0A        \n-return\n+if\n  self._tip is no\n@@ -1158,21 +1158,79 @@\n _tip\n- is not None%0A\n+!= None:%0A            return True%0A        else:%0A            return False\n %0A   \n@@ -1246,17 +1246,16 @@\n rt(self,\n- \n grafite:\n@@ -1408,17 +1408,16 @@\n ess() !=\n- \n self._th\n@@ -1466,13 +1466,13 @@\n inco\n-mpat%C3%AD\n+npati\n vel%22\n@@ -1546,17 +1546,16 @@\n rn True%0A\n-%0A\n     def \n@@ -1574,17 +1574,16 @@\n  -%3E Lead\n- \n %7C None:%0A\n@@ -1596,928 +1596,8 @@\n   if\n- not self.hasGrafite():%0A            print(%22fail: nao existe grafite%22)%0A            return None%0A        aux: Lead = self._tip%0A        self._tip = None%0A        return aux%0A%0A    def writePage(self):%0A        if not self.hasGrafite():%0A            print(%22fail: nao existe grafite%22)%0A            return%0A        grafite = self._tip%0A        tamanho_atual = grafite.getSize()%0A        gasto = grafite.usagePerSheet()%0A        if tamanho_atual %3C= 10:%0A            print(%22fail: tamanho insuficiente%22)%0A            return%0A        novo_tamanho = tamanho_atual - gasto%0A        if novo_tamanho %3C 10:%0A            grafite.setSize(10)%0A            print(%22fail: folha incompleta%22)%0A            return%0A        grafite.setSize(novo_tamanho)%0A%0A    def __str__(self) -%3E str:%0A        if self.hasGrafite():%0A            return f%22calibre: %7Bself._thickness%7D, grafite: %7Bself._tip%7D%22%0A        else:%0A            return f%22calibre: %7Bself._thickness%7D, grafite: null%22%0A\n %0A%0Ade\n@@ -1701,17 +1701,16 @@\n int(\n-f\n %22$\n-%7B\n+%22+\n line\n-%7D\n %22)%0A \n@@ -1747,17 +1747,17 @@\n split()%0A\n-%0A\n+ \n         \n@@ -1804,14 +1804,10 @@\n cil \n-is not\n+!=\n  Non\n@@ -1844,35 +1844,29 @@\n l)%0A         \n-   \n else\n-:%0A  \n+%0A\n             \n@@ -1857,34 +1857,32 @@\n lse%0A            \n-  \n print(%22fail: lap\n@@ -1903,17 +1903,20 @@\n ciada%22)%0A\n-%0A\n+    \n         \n@@ -1956,17 +1956,16 @@\n   break%0A\n-%0A\n         \n@@ -1979,17 +1979,16 @@\n gs%5B0%5D ==\n- \n %22init%22:%0A\n@@ -2053,17 +2053,17 @@\n = Pencil\n-(\n+9\n thicknes\n@@ -2065,17 +2065,16 @@\n ckness)%0A\n-%0A\n         \n@@ -2103,32 +2103,28 @@\n t%22:%0A        \n-    \n if \n-p\n+P\n encil is Non\n@@ -2138,32 +2138,27 @@\n         \n-    \n print(\n-%22\n fail\n-:\n+;\n  lapisei\n@@ -2195,16 +2195,18 @@\n     \n+  \n continue\n %0A   \n@@ -2205,210 +2205,6 @@\n inue\n-%0A            thickness = float(args%5B1%5D)%0A            hardness = args%5B2%5D%0A            size = int(args%5B3%5D)%0A            grafite = Lead(thickness, hardness, size)%0A            pencil.insert(grafite)%0A            \n %0A%0A\n",
            "lines": "77"
        },
        {
            "label": "2025-10-28_10-05-15",
            "content": "@@ -79,33 +79,32 @@\n :%0A        self._\n-_\n thickness: float\n@@ -115,26 +115,16 @@\n hickness\n-  #calibre\n %0A       \n@@ -126,25 +126,24 @@\n       self._\n-_\n hardness: st\n@@ -158,21 +158,8 @@\n ness\n-      #dureza\n %0A   \n@@ -165,25 +165,24 @@\n       self._\n-_\n size: int = \n@@ -189,30 +189,8 @@\n size\n-              #tamanho\n %0A%0A  \n@@ -237,33 +237,32 @@\n    return self._\n-_\n thickness%0A%0A    d\n@@ -307,25 +307,24 @@\n eturn self._\n-_\n hardness%0A   \n@@ -320,20 +320,16 @@\n ardness%0A\n-    \n %0A    def\n@@ -376,18 +376,13 @@\n lf._\n-_\n size%0A\n-    \n %0A   \n@@ -422,25 +422,24 @@\n       self._\n-_\n size = size%0A\n@@ -439,21 +439,16 @@\n = size%0A%0A\n-    %0A\n     def \n@@ -484,33 +484,32 @@\n        if self._\n-_\n hardness == %22HB%22\n@@ -531,32 +531,34 @@\n eturn 1%0A        \n+el\n if self.__hardne\n@@ -542,33 +542,32 @@\n      elif self._\n-_\n hardness == %222B%22\n@@ -589,32 +589,34 @@\n eturn 2%0A        \n+el\n if self.__hardne\n@@ -600,33 +600,32 @@\n      elif self._\n-_\n hardness == %224B%22\n@@ -647,32 +647,34 @@\n eturn 4%0A        \n+el\n if self.__hardne\n@@ -662,25 +662,24 @@\n  elif self._\n-_\n hardness == \n@@ -705,16 +705,34 @@\n eturn 6%0A\n+        else:%0A    \n         \n@@ -740,20 +740,16 @@\n eturn 0%0A\n-    \n %0A    def\n@@ -792,25 +792,24 @@\n n f%22%5B%7Bself._\n-_\n thickness%7D:%7B\n@@ -814,17 +814,16 @@\n :%7Bself._\n-_\n hardness\n@@ -831,17 +831,16 @@\n :%7Bself._\n-_\n size%7D%5D%22%0A\n@@ -840,16 +840,17 @@\n ize%7D%5D%22%0A%0A\n+%0A\n class Pe\n@@ -915,14 +915,20 @@\n lf._\n-_\n tip: \n+Lead %7C \n None\n@@ -938,57 +938,8 @@\n None\n-              #grafite atual (come%C3%A7a sem grafite)\n %0A   \n@@ -945,25 +945,24 @@\n       self._\n-_\n thickness: f\n@@ -981,18 +981,8 @@\n ness\n-  #calibre\n %0A%0A  \n@@ -1037,25 +1037,20 @@\n n self._\n-_\n tip%0A\n-    \n %0A    def\n@@ -1096,25 +1096,24 @@\n eturn self._\n-_\n thickness%0A%0A \n@@ -1157,92 +1157,35 @@\n     \n-if\n+return\n  self._\n-_\n tip \n-!= None:%0A            return True%0A        else:%0A            return Fals\n+is not Non\n e%0A%0A \n@@ -1261,55 +1261,8 @@\n e():\n- #verifica se ja existe um grafite na lapiseira\n %0A   \n@@ -1369,25 +1369,24 @@\n () != self._\n-_\n thickness:%0A \n@@ -1425,17 +1425,17 @@\n incompat\n-i\n+%C3%AD\n vel%22)%0A  \n@@ -1467,25 +1467,24 @@\n       self._\n-_\n tip = grafit\n@@ -1505,20 +1505,16 @@\n rn True%0A\n-    \n %0A    def\n@@ -1659,27 +1659,9 @@\n     \n-else:%0A            A\n+a\n ux: \n@@ -1669,33 +1669,28 @@\n ead = self._\n-_\n tip%0A\n-    \n         self\n@@ -1691,17 +1691,16 @@\n   self._\n-_\n tip = No\n@@ -1698,28 +1698,24 @@\n _tip = None%0A\n-    \n         retu\n@@ -1721,20 +1721,12 @@\n urn \n-A\n+a\n ux%0A\n-        \n %0A   \n@@ -1874,53 +1874,12 @@\n lf._\n-_\n tip%0A\n-        gasto = grafite.usagePerSheet()%0A\n     \n@@ -1912,24 +1912,64 @@\n e.getSize()%0A\n+        gasto = grafite.usagePerSheet()%0A\n         if t\n@@ -2054,17 +2054,16 @@\n   return\n- \n %0A       \n@@ -2353,33 +2353,32 @@\n calibre: %7Bself._\n-_\n thickness%7D, graf\n@@ -2389,17 +2389,16 @@\n  %7Bself._\n-_\n tip%7D%22%0A  \n@@ -2446,17 +2446,16 @@\n  %7Bself._\n-_\n thicknes\n@@ -2476,14 +2476,10 @@\n ull%22\n- %0A    \n+%0A%0A\n %0Adef\n@@ -2582,18 +2582,18 @@\n int(\n+f\n %22$\n-%22 + \n+%7B\n line\n+%7D%22\n )%0A  \n@@ -2682,18 +2682,22 @@\n  pencil \n-!=\n+is not\n  None:%0A \n@@ -2789,32 +2789,33 @@\n  nao iniciada%22)%0A\n+%0A\n         elif arg\n@@ -2847,16 +2847,17 @@\n   break%0A\n+%0A\n         \n@@ -2958,16 +2958,17 @@\n ckness)%0A\n+%0A\n         \n@@ -3306,138 +3306,10 @@\n     \n-elif args%5B0%5D == %22remove%22:%0A            pencil.remove()%0A        elif args%5B0%5D == %22write%22:%0A            pencil.writePage()%0A        %0Amain()\n+    %0A\n %0A\n",
            "lines": "121"
        },
        {
            "label": "2025-10-28_10-10-10",
            "content": "@@ -3644,24 +3644,55 @@\n == %22write%22:%0A\n+            pencil.writePage()%0A\n         %0Amai\n",
            "lines": "124"
        },
        {
            "label": "2025-10-28_10-10-45",
            "content": "@@ -3660,36 +3660,8 @@\n     \n-          pencil.writePage()\n %0Amai\n",
            "lines": "123"
        },
        {
            "label": "2025-10-28_10-10-56",
            "content": "@@ -2080,16 +2080,17 @@\n e grafit\n+e\n %22)%0A     \n",
            "lines": "123"
        },
        {
            "label": "2025-10-28_10-11-49",
            "content": "@@ -2072,33 +2072,32 @@\n ao existe grafit\n-e\n %22)%0A            r\n",
            "lines": "123"
        },
        {
            "label": "2025-10-28_10-12-04",
            "content": "class Lead:\n    def __init__(self, thickness: float, hardness: str, size: int):\n        self.__thickness: float = thickness  #calibre\n        self.__hardness: str = hardness      #dureza\n        self.__size: int = size              #tamanho\n\n    def getThickness(self) -> float:\n        return self.__thickness\n\n    def getHardness(self) -> str:\n        return self.__hardness\n    \n    def getSize(self) -> int:\n        return self.__size\n    \n    def setSize(self, size: int):\n        self.__size = size\n\n    \n    def usagePerSheet(self) -> int:\n        if self.__hardness == \"HB\":\n            return 1\n        if self.__hardness == \"2B\":\n            return 2\n        if self.__hardness == \"4B\":\n            return 4\n        if self.__hardness == \"6B\":\n            return 6\n        return 0\n    \n    def __str__(self) -> str:\n        return f\"[{self.__thickness}:{self.__hardness}:{self.__size}]\"\n\nclass Pencil:\n    def __init__(self, thickness: float):\n        self.__tip: None = None              #grafite atual (come\u00e7a sem grafite)\n        self.__thickness: float = thickness  #calibre\n\n    def getTip(self) -> Lead | None:\n        return self.__tip\n    \n    def getThickness(self) -> float:\n        return self.__thickness\n\n    def hasGrafite(self) -> bool:\n        if self.__tip != None:\n            return True\n        else:\n            return False\n\n    def insert(self, grafite: Lead) -> bool:\n        if self.hasGrafite(): #verifica se ja existe um grafite na lapiseira\n            print(\"fail: ja existe grafite\")\n            return False\n        elif grafite.getThickness() != self.__thickness:\n            print(\"fail: calibre incompativel\")\n            return False\n        self.__tip = grafite\n        return True\n    \n    def remove(self) -> Lead | None:\n        if not self.hasGrafite():\n            print(\"fail: nao existe grafite\")\n            return None\n        else:\n            Aux: Lead = self.__tip\n            self.__tip = None\n            return Aux\n        \n    def writePage(self):\n        if not self.hasGrafite():\n            print(\"fail: nao existe grafite\")\n            return\n        grafite = self.__tip\n        gasto = grafite.usagePerSheet()\n        tamanho_atual = grafite.getSize()\n        if tamanho_atual <= 10:\n            print(\"fail: tamanho insuficiente\")\n            return \n        novo_tamanho = tamanho_atual - gasto\n        if novo_tamanho < 10:\n            grafite.setSize(10)\n            print(\"fail: folha incompleta\")\n            return\n        grafite.setSize(novo_tamanho)\n\n    def __str__(self) -> str:\n        if self.hasGrafite():\n            return f\"calibre: {self.__thickness}, grafite: {self.__tip}\"\n        else:\n            return f\"calibre: {self.__thickness}, grafite: null\" \n    \ndef main():\n    pencil: Pencil | None = None\n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split()\n\n        if args[0] == \"show\":\n            if pencil != None:\n                print(pencil)\n            else:\n                print(\"fail: lapiseira nao iniciada\")\n        elif args[0] == \"end\":\n            break\n        elif args[0] == \"init\":\n            thickness = float(args[1])\n            pencil = Pencil(thickness)\n        elif args[0] == \"insert\":\n            if pencil is None:\n                print(\"fail: lapiseira nao iniciada\")\n                continue\n            thickness = float(args[1])\n            hardness = args[2]\n            size = int(args[3])\n            grafite = Lead(thickness, hardness, size)\n            pencil.insert(grafite)\n        elif args[0] == \"remove\":\n            pencil.remove()\n        elif args[0] == \"write\":\n                  pencil.writePage()\nmain()\n",
            "lines": "123"
        }
    ]
}