{
    "patches": [
        {
            "label": "2025-10-20_22-20-34",
            "content": "@@ -1,1139 +0,0 @@\n-class Pet:%0A    def __init__(self, energy: int, clean: int):%0A        self._energyMax = energy%0A        self._cleanMax = clean%0A        self._energy = energy%0A        self._clean = clean%0A        self._age = 0%0A        self._alive = True%0A    def isAlive(self) -%3E bool:%0A        return self._alive%0A    def tostring (self) -%3E str:%0A        return (f%22Pet- Energia: %7Bself._energy%7D/%7Bself._energyMax%7D, %22%0A                f%22Limpeza: %7Bself._clean%7D/%7Bself._cleanMax%7D, %22%0A                f%22Idade: %7Bself._age%7D, Vivo: %7Bself._alive%7D%22)%0A    def setEnergy(self,value: int) -%3E None:%0A        if not self._alive:%0A            return%0A        self._energy = max(0, min(value, self._energyMax))%0A        if self._energy == 0:%0A            self._alive = False%0A    def setClean(self, value: int) -%3E None:%0A        if not self._alive:%0A            return%0A        self._clean = max(0, min(value, self._cleanMax))%0A        if self._clean == 0:%0A            self._alive = False%0A    def setAge(self, value: int) -%3E None:%0A        if self._clean == 0:%0A            self._alive = max(0, value)%0A    def getEnergyMax(self) -%3E int:%0A        return self._energy%0A    def getEnergyMax(self) -%3E int:\n",
            "lines": "0"
        },
        {
            "label": "2025-10-26_17-26-33",
            "content": "@@ -227,32 +227,8 @@\n True\n-%0A%0A    # M%C3%A9todos p%C3%BAblicos\n %0A   \n@@ -282,17 +282,16 @@\n ._alive%0A\n-%0A\n     def \n@@ -296,14 +296,15 @@\n f to\n-S\n+s\n tring\n+ \n (sel\n@@ -335,17 +335,16 @@\n n (f%22Pet\n- \n - Energi\n@@ -506,23 +506,8 @@\n e%7D%22)\n-%0A%0A    # Setters\n %0A   \n@@ -522,25 +522,24 @@\n Energy(self,\n- \n value: int) \n@@ -707,33 +707,32 @@\n ._alive = False%0A\n-%0A\n     def setClean\n@@ -924,17 +924,16 @@\n = False%0A\n-%0A\n     def \n@@ -979,29 +979,34 @@\n    if self._\n-alive\n+clean == 0\n :%0A          \n@@ -1010,25 +1010,27 @@\n      self._a\n-g\n+liv\n e = max(0, v\n@@ -1038,23 +1038,8 @@\n lue)\n-%0A%0A    # Getters\n %0A   \n@@ -1048,24 +1048,27 @@\n ef getEnergy\n+Max\n (self) -%3E in\n@@ -1098,17 +1098,16 @@\n _energy%0A\n-%0A\n     def \n@@ -1136,35 +1136,4 @@\n int:\n-%0A        return self._energyMax\n",
            "lines": "32"
        },
        {
            "label": "2025-10-26_17-26-56",
            "content": "@@ -223,16 +223,40 @@\n e = True\n+%0A%0A    # M%C3%A9todos p%C3%BAblicos\n %0A    def\n@@ -305,16 +305,253 @@\n f._alive\n+%0A%0A    def toString(self) -%3E str:%0A        return (f%22Pet - Energia: %7Bself._energy%7D/%7Bself._energyMax%7D, %22%0A                f%22Limpeza: %7Bself._clean%7D/%7Bself._cleanMax%7D, %22%0A                f%22Idade: %7Bself._age%7D, Vivo: %7Bself._alive%7D%22)%0A%0A    # Setters\n %0A    def\n@@ -748,32 +748,33 @@\n ._alive = False%0A\n+%0A\n     def setClean\n@@ -966,16 +966,17 @@\n = False%0A\n+%0A\n     def \n@@ -1070,16 +1070,31 @@\n , value)\n+%0A%0A    # Getters\n %0A    def\n@@ -1142,24 +1142,25 @@\n elf._energy%0A\n+%0A\n     def getE\n@@ -1174,32 +1174,32 @@\n x(self) -%3E int:%0A\n+\n         return s\n@@ -1216,1077 +1216,4 @@\n yMax\n-%0A    def getClean(self) -%3E int:%0A        return self._clean%0A    def getCleanMax(self) -%3E int:%0A        return self._cleanMax%0A    def getAge(self) -%3E int:%0A        return self._age %0A    %0Aclass Game:%0A    def __init__(self, pet: Pet):%0A        self._pet= pet%0A    def testAlive(self) -%3E bool:%0A        return self._pet.isAlive()%0A    def showStatus(self) -%3E None:%0A        print(f%22E:%7Bself._pet.getEnergy()%7D/%7Bself._pet.getEnergyMax()%7D, %22%0A              f%22L:%7Bself._pet.getClean()%7D/%7Bself._pet.getCleanMax()%7D, %22%0A              f%22I:%7Bself._pet.getAge()%7D%22)%0Adef main():%0A    pet = None%0A    jogo = None%0A    while True:%0A        try:%0A            cmd = input().strip()%0A        except EOFError:%0A            break%0A        if cmd.startswith(%22$init%22):%0A            parts = cmd.split()%0A            energy = int(parts%5B1%5D)%0A            clean = int(parts%5B2%5D)%0A            pet = Pet(energy,clean)%0A            jogo = Game(pet)%0A        elif cmd.startswith(%22$show%22):%0A            if jogo:%0A                jogo.showStatus()%0A        elif cmd.startswith(%22$end%22):%0A            break%0Aif __name__ == %22__main__%22:%0A    main()\n",
            "lines": "43"
        },
        {
            "label": "2025-10-26_18-38-29",
            "content": "@@ -1482,16 +1482,31 @@\n main():%0A\n+    pet = None%0A\n     jogo\n@@ -1623,17 +1623,8 @@\n eak%0A\n-        %0A\n     \n",
            "lines": "66"
        },
        {
            "label": "2025-10-26_18-57-55",
            "content": "@@ -1604,17 +1604,25 @@\n   break%0A\n+        \n %0A\n-\n         \n@@ -1685,69 +1685,8 @@\n t()%0A\n-            if len(parts) %3E= 3:%0A                try:%0A        \n     \n@@ -1728,24 +1728,16 @@\n         \n-  \n-      \n clean = \n@@ -1754,76 +1754,8 @@\n 2%5D)%0A\n-                except ValueError:%0A                    continue%0A    \n     \n@@ -1783,20 +1783,15 @@\n rgy,\n- \n clean)%0A\n-    \n     \n@@ -1941,24 +1941,24 @@\n th(%22$end%22):%0A\n-\n             \n@@ -1946,24 +1946,62 @@\n end%22):%0A            break\n+%0Aif __name__ == %22__main__%22:%0A    main()\n",
            "lines": "66"
        },
        {
            "label": "2025-10-26_19-04-33",
            "content": "@@ -1265,16 +1265,22 @@\n def show\n+Status\n (self) -\n@@ -1539,20 +1539,19 @@\n         \n-line\n+cmd\n  = input\n@@ -1620,42 +1620,37 @@\n  if \n-line == %22%22:%0A            continue%0A%0A\n+cmd.startswith(%22$init%22):%0A    \n     \n@@ -1665,12 +1665,11 @@\n s = \n-line\n+cmd\n .spl\n@@ -1673,25 +1673,25 @@\n split()%0A\n-%0A\n+ \n         \n if parts\n@@ -1686,32 +1686,57 @@\n     \n-if parts%5B0%5D == %22$init%22:%0A\n+   if len(parts) %3E= 3:%0A                try:%0A     \n     \n@@ -1743,16 +1743,19 @@\n         \n+   \n energy =\n@@ -1769,16 +1769,24 @@\n rts%5B1%5D)%0A\n+        \n         \n@@ -1811,16 +1811,84 @@\n rts%5B2%5D)%0A\n+                except ValueError:%0A                    continue%0A    \n         \n@@ -1916,16 +1916,20 @@\n  clean)%0A\n+    \n         \n@@ -1966,27 +1966,31 @@\n lif \n-parts%5B0%5D == \n+cmd.startswith(\n %22$show%22\n+)\n :%0A  \n@@ -2033,16 +2033,22 @@\n ogo.show\n+Status\n ()%0A     \n@@ -2059,26 +2059,30 @@\n lif \n-parts%5B0%5D == \n+cmd.startswith(\n %22$end%22\n+)\n :%0A  \n@@ -2100,40 +2100,4 @@\n reak\n-%0Aif __name__==%22__main__%22:%0A    main()\n",
            "lines": "68"
        },
        {
            "label": "2025-10-26_19-18-21",
            "content": "@@ -1109,17 +1109,23 @@\n elf._age\n+ %0A    \n %0A\n-\n class Ga\n@@ -1179,17 +1179,16 @@\n elf._pet\n- \n = pet%0A  \n@@ -1599,16 +1599,17 @@\n   break%0A\n+%0A\n         \n@@ -1644,16 +1644,17 @@\n ontinue%0A\n+%0A\n         \n@@ -1674,16 +1674,17 @@\n split()%0A\n+%0A\n         \n@@ -1987,20 +1987,18 @@\n __name__\n- \n ==\n- \n %22__main_\n",
            "lines": "70"
        },
        {
            "label": "2025-10-26_19-22-08",
            "content": "@@ -224,16 +224,599 @@\n  = True%0A\n+    def isAlive(self) -%3E bool:%0A        return self._alive%0A    def setEnergy(self, value: int) -%3E None:%0A        if not self._alive:%0A            return%0A        self._energy = max(0, min(value, self._energyMax))%0A        if self._energy == 0:%0A            self._alive = False%0A    def setClean(self, value: int) -%3E None:%0A        if not self._alive:%0A            return%0A        self._clean = max(0, min(value, self._cleanMax))%0A        if self._clean == 0:%0A            self._alive = False%0A    def setAge(self, value: int) -%3E None:%0A        if self._alive:%0A            self._age = max(0, value)\n %0A    def\n@@ -868,17 +868,16 @@\n _energy%0A\n-%0A\n     def \n@@ -930,25 +930,24 @@\n ._energyMax%0A\n-%0A\n     def getC\n@@ -992,17 +992,16 @@\n ._clean%0A\n-%0A\n     def \n@@ -1056,17 +1056,16 @@\n leanMax%0A\n-%0A\n     def \n@@ -1110,18 +1110,16 @@\n lf._age%0A\n-%0A%0A\n class Ga\n@@ -1180,25 +1180,24 @@\n t = pet%0A\n-%0A\n     def \n show(sel\n@@ -1188,20 +1188,25 @@\n     def \n-show\n+testAlive\n (self) -\n@@ -1203,28 +1203,28 @@\n ve(self) -%3E \n-None\n+bool\n :%0A        p \n@@ -1225,11 +1225,14 @@\n     \n-p =\n+return\n  sel\n@@ -1237,25 +1237,63 @@\n elf._pet\n-%0A   \n+.isAlive()%0A    def show(self) -%3E None:%0A\n      \n+   \n print(f%22\n@@ -1295,17 +1295,25 @@\n nt(f%22E:%7B\n-p\n+self._pet\n .getEner\n@@ -1315,25 +1315,33 @@\n tEnergy()%7D/%7B\n-p\n+self._pet\n .getEnergyMa\n@@ -1350,12 +1350,38 @@\n )%7D, \n-L:%7Bp\n+%22%0A              f%22L:%7Bself._pet\n .get\n@@ -1390,17 +1390,25 @@\n ean()%7D/%7B\n-p\n+self._pet\n .getClea\n@@ -1420,265 +1420,79 @@\n )%7D, \n-I:%7Bp.getAge()%7D%22)%0A%0A%0Adef normalize_line(line: str) -%3E str:%0A    if line is None:%0A        return %22%22%0A    line = line.replace(%22%C2%B7%22, %22 %22)%0A    line = line.replace(%22%5Ct%22, %22 %22)%0A    return %22 %22.join(line.split())%0A%0A%0Adef main():%0A    game = None%0A    pet = None%0A    try:%0A    \n+%22%0A              f%22I:%7Bself._pet.getAge()%7D%22)%0Adef main():%0A    jogo = None%0A\n     \n@@ -1503,20 +1503,16 @@\n e True:%0A\n-    \n         \n@@ -1532,15 +1532,12 @@\n     \n-    raw\n+line\n  = i\n@@ -1542,26 +1542,33 @@\n  input()\n+.strip()\n %0A\n- \n         \n    excep\n@@ -1551,35 +1551,32 @@\n strip()%0A        \n-   \n except EOFError:\n@@ -1592,119 +1592,14 @@\n     \n-    \n break%0A\n-            if raw is None:%0A                break%0A            line = normalize_line(raw.strip())%0A    \n     \n@@ -1621,36 +1621,32 @@\n %22%22:%0A            \n-    \n continue%0A       \n@@ -1630,36 +1630,32 @@\n        continue%0A\n-    \n         parts = \n@@ -1669,239 +1669,42 @@\n lit(\n-%22 %22)%0A            cmd = parts%5B0%5D%0A            if cmd.startswith(%22$%22):%0A                cmd = cmd%5B1:%5D%0A            cmd = cmd.lower()%0A            if cmd\n+)%0A        if parts%5B0%5D\n  == %22\n+$\n init%22:%0A\n-                if len(parts) %3E= 3:%0A                    try:%0A            \n     \n@@ -1746,28 +1746,16 @@\n         \n-     \n-       \n clean = \n@@ -1772,87 +1772,8 @@\n 2%5D)%0A\n-                    except Exception:%0A                        continue%0A        \n     \n@@ -1817,28 +1817,20 @@\n         \n-      \n-  game\n+jogo\n  = Game(\n@@ -1838,63 +1838,8 @@\n et)%0A\n-                else:%0A                    continue%0A    \n     \n@@ -1847,24 +1847,30 @@\n    elif \n-cmd\n+parts%5B0%5D\n  == %22\n+$\n show%22:%0A \n@@ -1884,31 +1884,15 @@\n     \n-  \n-  \n if \n-game is not None\n+jogo\n :%0A  \n@@ -1909,16 +1909,12 @@\n     \n-    game\n+jogo\n .sho\n@@ -1929,25 +1929,27 @@\n     \n-   \n- \n elif \n-cmd\n+parts%5B0%5D\n  == %22\n+$\n end%22\n@@ -1966,108 +1966,14 @@\n     \n-  \n-  \n break%0A\n-            else:%0A                continue%0A    except KeyboardInterrupt:%0A        return%0A%0A%0A\n if _\n@@ -2005,9 +2005,8 @@\n   main()\n-%0A\n",
            "lines": "66"
        },
        {
            "label": "2025-10-26_19-33-04",
            "content": "@@ -244,24 +244,31 @@\n Energy(self)\n+ -%3E int\n :%0A        re\n@@ -304,32 +304,39 @@\n tEnergyMax(self)\n+ -%3E int\n :%0A        return\n@@ -371,24 +371,31 @@\n tClean(self)\n+ -%3E int\n :%0A        re\n@@ -433,24 +433,31 @@\n eanMax(self)\n+ -%3E int\n :%0A        re\n@@ -493,24 +493,31 @@\n getAge(self)\n+ -%3E int\n :%0A        re\n@@ -571,16 +571,21 @@\n elf, pet\n+: Pet\n ):%0A     \n@@ -622,16 +622,24 @@\n ow(self)\n+ -%3E None\n :%0A      \n@@ -763,16 +763,198 @@\n ()%7D%22)%0A%0A%0A\n+def normalize_line(line: str) -%3E str:%0A    if line is None:%0A        return %22%22%0A    line = line.replace(%22%C2%B7%22, %22 %22)%0A    line = line.replace(%22%5Ct%22, %22 %22)%0A    return %22 %22.join(line.split())%0A%0A%0A\n def main\n@@ -984,24 +984,37 @@\n  pet = None%0A\n+    try:%0A    \n     while Tr\n@@ -1021,24 +1021,28 @@\n ue:%0A        \n+ \n+   \n try:%0A       \n@@ -1046,20 +1046,23 @@\n         \n-line\n+    raw\n  = input\n@@ -1067,16 +1067,8 @@\n ut()\n-.strip()\n %0A   \n@@ -1072,16 +1072,20 @@\n         \n+    \n except E\n@@ -1105,22 +1105,127 @@\n         \n+    \n break%0A\n+            if raw is None:%0A                break%0A            line = normalize_line(raw.strip())%0A    \n         \n@@ -1239,16 +1239,20 @@\n  == %22%22:%0A\n+    \n         \n@@ -1272,16 +1272,20 @@\n         \n+    \n parts = \n@@ -1293,42 +1293,29 @@\n ine.\n-replace(%22%C2%B7%22, %22 %22).split()%0A\n+split(%22 %22)%0A  \n         \n cmd \n@@ -1306,24 +1306,26 @@\n )%0A          \n+  \n cmd = parts%5B\n@@ -1327,16 +1327,20 @@\n arts%5B0%5D%0A\n+    \n         \n@@ -1367,32 +1367,36 @@\n %22):%0A            \n+    \n cmd = cmd%5B1:%5D%0A  \n@@ -1393,32 +1393,36 @@\n cmd%5B1:%5D%0A        \n+ \n+   \n cmd = cmd.lower(\n@@ -1427,24 +1427,28 @@\n r()%0A        \n+   \n+ \n if cmd == %22i\n@@ -1455,12 +1455,28 @@\n nit%22\n- and\n+:%0A                if\n  len\n@@ -1489,16 +1489,53 @@\n ) %3E= 3:%0A\n+                    try:%0A            \n         \n@@ -1561,16 +1561,28 @@\n rts%5B1%5D)%0A\n+            \n         \n@@ -1607,16 +1607,95 @@\n rts%5B2%5D)%0A\n+                    except Exception:%0A                        continue%0A        \n         \n@@ -1731,24 +1731,32 @@\n             \n+     \n+   \n game = Game(\n@@ -1760,16 +1760,71 @@\n me(pet)%0A\n+                else:%0A                    continue%0A    \n         \n@@ -1843,16 +1843,20 @@\n %22show%22:%0A\n+    \n         \n@@ -1876,24 +1876,28 @@\n s not None:%0A\n+    \n             \n@@ -1912,32 +1912,36 @@\n .show()%0A        \n+    \n elif cmd == %22end\n@@ -1955,22 +1955,114 @@\n         \n+    \n break%0A\n+            else:%0A                continue%0A    except KeyboardInterrupt:%0A        return%0A\n %0A%0Aif __n\n",
            "lines": "85"
        },
        {
            "label": "2025-10-26_19-34-30",
            "content": "@@ -229,72 +229,496 @@\n ue%0A%0A\n-class Game:%0A    def __init__(self, pet):%0A        self._pet = pet\n+    def getEnergy(self):%0A        return self._energy%0A%0A    def getEnergyMax(self):%0A        return self._energyMax%0A%0A    def getClean(self):%0A        return self._clean%0A%0A    def getCleanMax(self):%0A        return self._cleanMax%0A%0A    def getAge(self):%0A        return self._age%0A%0A%0Aclass Game:%0A    def __init__(self, pet):%0A        self._pet = pet%0A%0A    def show(self):%0A        p = self._pet%0A        print(f%22E:%7Bp.getEnergy()%7D/%7Bp.getEnergyMax()%7D, L:%7Bp.getClean()%7D/%7Bp.getCleanMax()%7D, I:%7Bp.getAge()%7D%22)%0A\n %0A%0Ade\n@@ -754,24 +754,44 @@\n  pet = None%0A\n+    while True:%0A    \n     try:%0A   \n@@ -787,16 +787,20 @@\n    try:%0A\n+    \n         \n@@ -822,16 +822,20 @@\n strip()%0A\n+    \n     exce\n@@ -859,87 +859,244 @@\n     \n+  \n-return%0A\n+  break%0A   \n     \n+ \n if line\n-.startswith(%22$init%22):%0A        parts = line.split()%0A        if\n+ == %22%22:%0A            continue%0A        parts = line.replace(%22%C2%B7%22, %22 %22).split()%0A        cmd = parts%5B0%5D%0A        if cmd.startswith(%22$%22):%0A            cmd = cmd%5B1:%5D%0A        cmd = cmd.lower()%0A        if cmd == %22init%22 and\n  len\n@@ -1244,16 +1244,151 @@\n me(pet)%0A\n+        elif cmd == %22show%22:%0A            if game is not None:%0A                game.show()%0A        elif cmd == %22end%22:%0A            break%0A%0A\n %0Aif __na\n",
            "lines": "63"
        },
        {
            "label": "2025-10-26_19-35-29",
            "content": "@@ -314,19 +314,19 @@\n  game = \n-Gam\n+Non\n e%0A    pe\n@@ -329,19 +329,20 @@\n   pet = \n-Pet\n+None\n %0A    try\n",
            "lines": "30"
        },
        {
            "label": "2025-10-26_19-36-00",
            "content": "@@ -314,19 +314,19 @@\n  game = \n-Non\n+Gam\n e%0A    pe\n@@ -333,46 +333,21 @@\n t = \n-None%0A    while True:%0A \n+Pet%0A\n     \n-   \n try:%0A\n-    \n     \n@@ -373,20 +373,16 @@\n strip()%0A\n-    \n     exce\n@@ -406,594 +406,239 @@\n     \n-   \n- break%0A        if line == %22%22:%0A            continue%0A        parts = line.replace(%22%C2%B7%22, %22 %22).split()%0A        cmd = parts%5B0%5D.lstrip(%22$%22).lower()%0A        if cmd == %22init%22 and len(parts) %3E= 3:%0A            energy = int(parts%5B1%5D)%0A            clean = int(parts%5B2%5D)%0A            pet = Pet(energy, clean)%0A            game = Game(pet)%0A            # N%C3%83O imprime nada%0A        elif cmd == %22show%22:%0A            if game is not None:%0A                p = game._pet%0A                print(f%22E:%7Bp._energy%7D/%7Bp._energyMax%7D, L:%7Bp._clean%7D/%7Bp._cleanMax%7D, I:%7Bp._age%7D%22)%0A        elif cmd == %22end%22:%0A            break\n+return%0A    if line.startswith(%22$init%22):%0A        parts = line.split()%0A        if len(parts) %3E= 3:%0A            energy = int(parts%5B1%5D)%0A            clean = int(parts%5B2%5D)%0A            pet = Pet(energy, clean)%0A            game = Game(pet)\n %0A%0Aif\n@@ -668,12 +668,13 @@\n :%0A    main()\n+%0A\n",
            "lines": "30"
        },
        {
            "label": "2025-10-26_19-38-18",
            "content": "@@ -224,16 +224,17 @@\n  = True%0A\n+%0A\n class Ga\n@@ -294,137 +294,9 @@\n pet%0A\n-    def show(self):%0A        p = self._pet%0A        print(f%22E:%7Bp._energy%7D/%7Bp._energyMax%7D, L:%7Bp._clean%7D/%7Bp._cleanMax%7D, I:%7Bp._age%7D%22)\n %0A\n+\n def \n@@ -319,16 +319,31 @@\n  = None%0A\n+    pet = None%0A\n     whil\n@@ -389,16 +389,24 @@\n  input()\n+.strip()\n %0A       \n@@ -456,16 +456,18 @@\n  if \n-not \n line\n+ == %22%22\n :%0A  \n@@ -756,16 +756,47 @@\n me(pet)%0A\n+            # N%C3%83O imprime nada%0A\n         \n@@ -867,19 +867,116 @@\n     \n+ p =\n  game.\n-show(\n+_pet%0A                print(f%22E:%7Bp._energy%7D/%7Bp._energyMax%7D, L:%7Bp._clean%7D/%7Bp._cleanMax%7D, I:%7Bp._age%7D%22\n )%0A  \n",
            "lines": "40"
        },
        {
            "label": "2025-10-26_19-39-48",
            "content": "@@ -224,17 +224,16 @@\n  = True%0A\n-%0A\n class Ga\n@@ -289,17 +289,16 @@\n t = pet%0A\n-%0A\n     def \n@@ -418,17 +418,16 @@\n _age%7D%22)%0A\n-%0A\n def main\n@@ -450,34 +450,8 @@\n one%0A\n-    primeira_linha = True%0A\n     \n@@ -591,96 +591,8 @@\n nue%0A\n-%0A        if primeira_linha:%0A            print(line)%0A            primeira_linha = False%0A%0A\n     \n@@ -630,24 +630,24 @@\n  %22).split()%0A\n+\n         cmd \n@@ -677,17 +677,16 @@\n lower()%0A\n-%0A\n         \n",
            "lines": "38"
        },
        {
            "label": "2025-10-26_19-42-05",
            "content": "@@ -224,16 +224,17 @@\n  = True%0A\n+%0A\n class Ga\n@@ -286,24 +286,25 @@\n ._pet = pet%0A\n+%0A\n     def show\n@@ -420,16 +420,17 @@\n _age%7D%22)%0A\n+%0A\n def main\n@@ -616,16 +616,17 @@\n ontinue%0A\n+%0A\n         \n@@ -703,16 +703,17 @@\n = False%0A\n+%0A\n         \n@@ -794,16 +794,17 @@\n lower()%0A\n+%0A\n         \n@@ -1092,16 +1092,16 @@\n  %22end%22:%0A\n-\n         \n@@ -1110,16 +1110,17 @@\n   break%0A\n+%0A\n if __nam\n",
            "lines": "48"
        },
        {
            "label": "2025-10-26_19-42-54",
            "content": "class Pet:\n    def __init__(self, energy: int, clean: int):\n        self._energyMax = energy\n        self._cleanMax = clean\n        self._energy = energy\n        self._clean = clean\n        self._age = 0\n        self._alive = True\nclass Game:\n    def __init__(self, pet):\n        self._pet = pet\n    def show(self):\n        p = self._pet\n        print(f\"E:{p._energy}/{p._energyMax}, L:{p._clean}/{p._cleanMax}, I:{p._age}\")\ndef main():\n    game = None\n    primeira_linha = True\n    while True:\n        try:\n            line = input()\n        except EOFError:\n            break\n        if not line:\n            continue\n        if primeira_linha:\n            print(line)\n            primeira_linha = False\n        parts = line.replace(\"\u00b7\", \" \").split()\n        cmd = parts[0].lstrip(\"$\").lower()\n        if cmd == \"init\" and len(parts) >= 3:\n            energy = int(parts[1])\n            clean = int(parts[2])\n            pet = Pet(energy, clean)\n            game = Game(pet)\n        elif cmd == \"show\":\n            if game is not None:\n                game.show()\n        elif cmd == \"end\":\n            break\nif __name__ == \"__main__\":\n    main()",
            "lines": "41"
        }
    ]
}